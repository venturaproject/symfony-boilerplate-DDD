services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Domain Layer
    App\Domain\:
        resource: '../src/Domain/'

    # Application Layer
    App\Application\:
        resource: '../src/Application/'

    # Infrastructure Layer
    App\Infrastructure\:
        resource: '../src/Infrastructure/'
    
    App\Domain\Repository\BookRepositoryInterface:
        class: App\Infrastructure\Persistence\Doctrine\Repository\BookRepository
        arguments: ['@doctrine']

    App\Infrastructure\Service\OpenWeatherMapService:
        arguments:
            $apiKey: '%env(OPEN_WEATHER_MAP_API_KEY)%'
            $apiUrl: '%env(OPEN_WEATHER_MAP_API_URL)%'
    
    App\Infrastructure\Service\EmailService:
        arguments:
            $mailer: '@mailer'
            $testEmail: '%env(TEST_EMAIL)%'

    App\Application\Command\CommandBus:
        public: true
        calls:
            - method: registerHandler
              arguments:
                - App\Application\Command\ListBooksCommand
                - '@App\Application\Command\Handler\ListBooksHandler'

    App\Application\Query\QueryBus:
        public: true
        calls:
            - method: registerHandler
              arguments:
                - App\Application\Query\GetBookByIdQuery
                - '@App\Application\Query\Handler\GetBookByIdHandler'

    App\Application\Command\Handler\ListBooksHandler:
        arguments:
            - '@App\Domain\Repository\BookRepositoryInterface'

    App\Application\Query\Handler\GetBookByIdHandler:
        arguments:
            - '@App\Domain\Repository\BookRepositoryInterface'
